#!/usr/bin/env bash

bootstrap_build() {
  sudo apt-get install python-pycurl ansible -qq

  local ansible_path="~/jalcine/wintermute/ansible/site.yml"

  if [ $USER == "vagrant" ]; then
    local ansible_path="/vagrant/ansible/site.yml"
  fi

  hostname | sudo tee /etc/ansible/hosts > /dev/null
  ansible-playbook -c local --extra-vars="compiler_family=${CXX:gcc}" ${ansible_path}
}

generate_build() {
  cmake -DCMAKE_CXX_COMPILER="/usr/bin/c++" \
        -DCMAKE_BUILD_TYPE=Debug \
        -DCMAKE_VERBOSE_MAKEFILE=ON \
        -DCI_BUILD=$2 $1 || exit 32
}


# Force CTest to run tests in parallel.
export CTEST_PARALLEL_LEVEL=2

# Use the provided `gcov` path.
export GCOV=$(which gcov)

case "$1" in
  "--before" )
    bootstrap_build || exit 16
    ;;
  "--generate" )
    generate_build . on
    ;;
  "--generate-vagrant" )
    cd ~vagrant;
    mkdir build; cd build
    generate_build /vagrant off
    ;;
  "--run" )
    make clean || exit 1
    make Experimental || exit 2
    ;;
  "--run-vagrant" )
    cd ~vagrant/build;
    make clean || exit 1
    make Experimental || exit 2
    ;;
  "--post" )
    coveralls --gcov "${GCOV}" --gcov-options "\-lcfd" -r . --include src --exclude test -t "${COVERALLS_TOKEN}"
    ;;
esac
